generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  googleId     String        @id @unique @default(uuid())
  displayName  String?
  email        String?
  avatar       String?
  bingoProfile BingoProfile?
}

model BingoProfile {
  id                  String      @id @default(uuid())
  totalMatches        Int         @default(0)
  wins                Int         @default(0)
  losses              Int         @default(0)
  lines_count         Int         @default(0)
  firstBlood_count    Int         @default(0)
  doubleKill_count    Int         @default(0)
  tripleKill_count    Int         @default(0)
  perfectionist_count Int         @default(0)
  rampage_count       Int         @default(0)
  mmr                 Int         @default(0)
  league              Leagues     @default(BRONZE)
  preferredBoards     Json[]
  gameHistory         BingoGame[] @relation("GamePlayers")
  userId              String      @unique
  User                User        @relation(fields: [userId], references: [googleId])
}

model BingoGame {
  gameId            String         @id @default(cuid())
  players       BingoProfile[] @relation("GamePlayers")
  gameboards    Json         // Game boards in JSON format
  matchHistory  Json      // Match history in JSON format
  winMethod     Win_method?
  gameWinnerId  String?
  tossWinnerId  String?
}

model BingoPlayerRecords {
  id        String @id @default(cuid()) // Unique identifier for the record
  player1Id String
  player2Id String
  ratio     Json? // Store ratio as a JSON object with player-specific ratios

  @@unique([player1Id, player2Id]) // Composite unique constraint to ensure a unique record for the pair of users
}

enum Leagues {
  BRONZE
  SILVER
  GOLD
  PLATINUM
  DIAMOND
  MASTER
  GRANDMASTER
}

enum Win_method {
  RESIGNATION
  ABANDON
  BINGO
}
